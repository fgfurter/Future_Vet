@model Future_Vet.Models.Vet

@{
    ViewBag.Title = "Create";
}

<h3 class="View-title" style="font-size: 3vw">Create new Vetenerian</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div style="float:left;" class="form-group col-xs-12">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div style="float:left;" class="form-group col-xs-12">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Id_Number, "ID number", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div style="float:left;" class="form-group col-xs-12">
                @Html.EditorFor(model => model.Id_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id_Number, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.License, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div style="float:left;" class="form-group col-xs-12">
                @Html.EditorFor(model => model.License, new { htmlAttributes = new { @class = "form-control", onkeyup = "InputToUpper(this);"  } })
                @Html.ValidationMessageFor(model => model.License, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 msg">
            <textarea class="notes" runat="server" id="txtAddress" name="txtAddress" rows="5" value="" style="font-size: small;max-height:100px"></textarea>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Back" onclick='window.location = "@Url.Action("Index", "Vets")";' class="Green-button" />
            <input type="submit" value="Create" class="Orange-button" />
        </div>
    </div>
}


@section Scripts {
    <script>
        function InputToUpper(obj) {
            if (obj.value != "") {
                obj.value = obj.value.toUpperCase();
            }
        }
    </script>
}
